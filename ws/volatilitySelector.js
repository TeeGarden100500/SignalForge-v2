// standalone_volatility_debug.js ‚Äî –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∏ –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫—ç—à–∞ –ø–æ —Å–∏–º–≤–æ–ª–∞–º (–≤—Ä—É—á–Ω—É—é)

const { cache } = require('./logic/multiCandleCache');
const config = require('./config/config');
const logger = require('./utils/logger');

function debugCache() {
  const tf = config.TIMEFRAMES.LEVEL_1;
  const requiredCandles = config.VOLATILITY_LOOKBACK / 5;

  logger.basic(`[debug] üìä –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∫—ç—à–∞ –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º—É ${tf}`);
  const symbols = Object.keys(cache);
  logger.basic(`[debug] üì¶ –°–∏–º–≤–æ–ª–æ–≤ –≤ –∫—ç—à–µ: ${symbols.length}`);

  for (const symbol of symbols) {
    const candles = cache[symbol]?.[tf];
    const count = candles?.length || 0;

    logger.basic(`[debug] ‚ûú ${symbol} [${tf}] ‚Äî ${count} —Å–≤–µ—á–µ–π`);
    if (count) {
      logger.verbose(`[debug] üïØ –ü—Ä–∏–º–µ—Ä: ${JSON.stringify(candles[0])}`);
    }
  }

  logger.basic(`[debug] ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞`);
}

debugCache();
