// debugStandaloneWS.js ‚Äî –ø—Ä–æ—Å—Ç–∞—è –æ—Ç–ª–∞–¥–∫–∞ Binance –ø–æ—Ç–æ–∫–∞ –Ω–∞ 1 –º–æ–Ω–µ—Ç—É

const WebSocket = require('ws');

const symbol = 'btcusdt';
const interval = '1m';

const stream = `${symbol}@kline_${interval}`;
const url = `wss://stream.binance.com:9443/ws/${stream}`;

const ws = new WebSocket(url);

ws.on('open', () => {
  console.log(`[debug] üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ ${stream}`);
});

ws.on('message', (data) => {
  try {
    const json = JSON.parse(data);
    if (json && json.e === 'kline') {
      const k = json.k;
      console.log(`[debug] üîî –ü—Ä–∏—à–ª–∞ —Å–≤–µ—á–∞: time=${k.t}, close=${k.c}, –∑–∞–∫—Ä—ã—Ç–∞=${k.x}`);
    }
  } catch (err) {
    console.error('[debug] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ:', err.message);
  }
});

ws.on('error', (err) => {
  console.error('[debug] ‚ùå –û—à–∏–±–∫–∞ WebSocket:', err.message);
});

ws.on('close', () => {
  console.log('[debug] ‚ùé –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ');
});
