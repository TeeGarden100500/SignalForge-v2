// üöÄ index.js ‚Äî –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É SignalForge v2

const config = require('./config/config');
const { selectTopVolatileSymbols } = require('./ws/volatilitySelector');
const { connectToStreams } = require('./ws/smartWSManager');
const logger = require('./utils/logger');

// üîÅ –¶–∏–∫–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ã—Ö –º–æ–Ω–µ—Ç
async function startBot() {
  logger.basic('üöÄ –ó–∞–ø—É—Å–∫ SignalForge v2...');

  async function updateAndSubscribe() {
    try {
      const topSymbols = await selectTopVolatileSymbols();
      logger.basic(`[volatility] –¢–æ–ø-${topSymbols.length} –º–æ–Ω–µ—Ç: ${topSymbols.join(', ')}`);

      // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket —Å —Ç–æ–ø-—Å–∏–º–≤–æ–ª–∞–º–∏
      connectToStreams(topSymbols);
    } catch (err) {
      logger.error('[volatility] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–æ–ª–∞—Ç–∏–ª—å–Ω—ã—Ö –º–æ–Ω–µ—Ç:', err.message);
    }
  }

  // –ü–µ—Ä–≤—ã–π –∑–∞–ø—É—Å–∫ —Å—Ä–∞–∑—É
  await updateAndSubscribe();

  // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ —Ç–∞–π–º–µ—Ä—É
  setInterval(updateAndSubscribe, config.VOLATILITY_REFRESH_INTERVAL_SEC * 1000);
}

startBot();
